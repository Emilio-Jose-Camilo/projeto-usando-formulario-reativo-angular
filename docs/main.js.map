{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/validators/noSpaceAllowed.validator.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from './validators/noSpaceAllowed.validator';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  formStatus: string = '';\n  formdata: any = {};\n\n  reactiveForm!: FormGroup;\n\n  ngOnInit(): void {\n    this.reactiveForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required, CustomValidators.noSpaceAllowed]),\n      lastName: new FormControl(null, [Validators.required, CustomValidators.noSpaceAllowed]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      username: new FormControl(null, Validators.required, CustomValidators.checkUserName),\n      dob: new FormControl(null, Validators.required),\n      gender: new FormControl('male', Validators.required),\n      address: new FormGroup({\n        street: new FormControl(null, Validators.required),\n        country: new FormControl('india', Validators.required),\n        city: new FormControl(null, Validators.required),\n        region: new FormControl(null, Validators.required),\n        postal: new FormControl(null, Validators.required),\n      }),\n      skills: new FormArray([\n        new FormControl(null, Validators.required),\n      ]),\n      experience: new FormArray([\n\n      ])\n    });\n  \n    this.reactiveForm.statusChanges.subscribe((status) => {\n      console.log(status);\n      this.formStatus = status;\n    })\n  }\n\n  onFormSubmitted() {\n    console.log(this.reactiveForm.value);\n    this.formdata = this.reactiveForm.value;\n    this.reactiveForm.reset({\n      firstname: null,\n      lastname: null,\n      email: null,\n      username: null,\n      dob: null,\n      gender: 'male',\n      address:{\n        street: null,\n        country: 'India',\n        city: null,\n        region: null,\n        postal: null\n      },\n      skills: [\n        null\n      ],\n      experience: [\n        \n      ]\n    });\n  }\n\n  /*Add field  */\n  addSkills() {\n    (<FormArray>this.reactiveForm.get('skills')).push(new FormControl(null, Validators.required));\n  }\n\n  /**Removing field */\n  deleteSkills(index: number) {\n    const controls = (<FormArray>this.reactiveForm.get('skills'));\n    controls.removeAt(index)\n  }\n\n  AddExperience() {\n    const formGroup = new FormGroup({\n      company: new FormControl(null),\n      position: new FormControl(null),\n      totalExp: new FormControl(null),\n      start: new FormControl(null),\n      end: new FormControl(null),\n\n    });\n    (<FormArray>this.reactiveForm.get('experience')).push(formGroup);\n  }\n\n  DeleteExperience(index: number) {\n    const formArray = (<FormArray>this.reactiveForm.get('experience'));\n    formArray.removeAt(index);\n  }\n\n  //method to generate username\n  generateUsername() {\n    let username = '';\n    const fName: string = this.reactiveForm.get('firstName').value;\n    const lName: string = this.reactiveForm.get('lastName').value;\n    const dob: string = this.reactiveForm.get('dob').value;\n\n    if(fName.length >= 3){\n      username += fName.slice(0, 3);\n    }\n    else {\n      username += fName;\n    }\n\n    if(lName.length >= 3){\n      username += lName.slice(0, 3);\n    }\n    else {\n      username += lName;\n    }\n\n    let datetime = new Date(dob);\n    username += datetime.getFullYear();\n\n    username = username.toLowerCase();\n\n    console.log(username);\n\n    this.reactiveForm.patchValue({\n      username: username,\n      address: {\n        city: 'New Delhi'\n      }\n    })\n}\n\n}\n\n","<section class=\"container\" [ngClass]=\"formStatus\">\n  <header>Registration Form</header>\n\n  <form class=\"form\" [formGroup]=\"reactiveForm\" (ngSubmit)=\"onFormSubmitted()\">\n    <div class=\"column\">\n      <div class=\"input-box\">\n        <input\n          type=\"text\"\n          placeholder=\"First Name\"\n          formControlName=\"firstName\"\n        />\n        <small\n          *ngIf=\"\n            reactiveForm.get('firstName').errors?.['required'] &&\n            reactiveForm.get('firstName')?.touched\n          \"\n        >\n          *First Name is a required field.\n        </small>\n        <small\n          *ngIf=\"\n            reactiveForm.get('firstName').errors?.['noSpaceAllowed'] &&\n            reactiveForm.get('firstName')?.touched\n          \"\n        >\n          *No space is allowed for first name.\n        </small>\n      </div>\n      <div class=\"input-box\">\n        <input type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\" />\n        <small\n          *ngIf=\"\n            reactiveForm.get('lastName')?.invalid &&\n            reactiveForm.get('lastName')?.touched\n          \"\n        >\n          *Last Name is a required field.\n        </small>\n      </div>\n    </div>\n\n    <div class=\"input-box\">\n      <input type=\"text\" placeholder=\"Email\" formControlName=\"email\" />\n      <small\n        *ngIf=\"\n          reactiveForm.get('email')?.invalid &&\n          reactiveForm.get('email')?.touched\n        \"\n      >\n        *Entered Email is not valid.\n      </small>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"input-box\">\n        <input type=\"text\" placeholder=\"username\" formControlName=\"username\" />\n        <button\n          class=\"btn-gen-username\"\n          type=\"button\"\n          (click)=\"generateUsername()\"\n          [disabled]=\"\n            !(\n              reactiveForm.get('firstName').value &&\n              reactiveForm.get('lastName').value &&\n              reactiveForm.get('dob').value\n            )\n          \"\n        >\n          Create a Username\n        </button>\n      </div>\n      <div class=\"input-box\">\n        <input type=\"date\" placeholder=\"Date of Birth\" formControlName=\"dob\" />\n      </div>\n    </div>\n\n    <div class=\"gender-box\">\n      <h3>Gender</h3>\n      <div class=\"gender-option\">\n        <div class=\"gender\">\n          <input\n            type=\"radio\"\n            value=\"male\"\n            id=\"check-male\"\n            formControlName=\"gender\"\n          />\n          <label for=\"check-male\">Male</label>\n        </div>\n        <div class=\"gender\">\n          <input\n            type=\"radio\"\n            value=\"female\"\n            id=\"check-female\"\n            formControlName=\"gender\"\n          />\n          <label for=\"check-female\">Female</label>\n        </div>\n        <div class=\"gender\">\n          <input\n            type=\"radio\"\n            value=\"other\"\n            id=\"check-other\"\n            formControlName=\"gender\"\n          />\n          <label for=\"check-other\">Prefer not to say</label>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"input-box address\" formGroupName=\"address\">\n      <label>Address</label>\n      <input\n        type=\"text\"\n        placeholder=\"Street address\"\n        formControlName=\"street\"\n      />\n      <small\n        *ngIf=\"\n          reactiveForm.get('address.street')?.invalid &&\n          reactiveForm.get('address.street')?.touched\n        \"\n      >\n        *street address is a required field.\n      </small>\n      <div class=\"column\">\n        <div class=\"select-box\">\n          <select name=\"country\" formControlName=\"country\">\n            <option hidden>Country</option>\n            <option>America</option>\n            <option>Japan</option>\n            <option>India</option>\n            <option>Nepal</option>\n          </select>\n          <small\n            *ngIf=\"\n              reactiveForm.get('address.country')?.invalid &&\n              reactiveForm.get('address.country')?.touched\n            \"\n          >\n            *country is a required field.\n          </small>\n        </div>\n        <input type=\"text\" placeholder=\"City\" formControlName=\"city\" />\n      </div>\n      <div class=\"column\">\n        <input type=\"text\" placeholder=\"Region\" formControlName=\"region\" />\n        <input\n          type=\"number\"\n          placeholder=\"Postal code\"\n          formControlName=\"postal\"\n        />\n        <small\n          *ngIf=\"\n            reactiveForm.get('address.postal')?.invalid &&\n            reactiveForm.get('address.postal')?.touched\n          \"\n        >\n          *Postal is a required field.\n        </small>\n      </div>\n    </div>\n\n    <!--HTML for Skills Form Array -->\n    <div class=\"input-box skills \" formArrayName=\"skills\">\n      <h4>Add Skills</h4>\n      <div\n        class=\"column\"\n        *ngFor=\"\n          let control of reactiveForm.get('skills')['controls'];\n          let i = index\n        \"\n      >\n        <input type=\"text\" placeholder=\"Add Skill...\" [formControlName]=\"i\" />\n        <button type=\"button\" class=\"btn-add-delete\" (click)=\"deleteSkills(i)\">\n          Delete\n        </button>\n      </div>\n      <button type=\"button\" class=\"btn-add-delete\" (click)=\"addSkills()\">\n        Add Skills\n      </button>\n    </div>\n\n    <!--HTML for Experience Form Array -->\n    <div class=\"input-box\" formArrayName=\"experience\">\n      <div\n        class=\"experience\"\n        *ngFor=\"\n          let exp of reactiveForm.get('experience')['controls'];\n          let i = index\n        \"\n        [formGroupName]=\"i\"\n      >\n        <label>Experience {{ i + 1 }}</label>\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          formControlName=\"company\"\n        />\n        <div class=\"column\">\n          <div class=\"select-box\">\n            <select formControlName=\"position\">\n              <option hidden>Position</option>\n              <option>Junior Developer</option>\n              <option>Software Developer</option>\n              <option>Senior Developer</option>\n              <option>Team Lead</option>\n            </select>\n          </div>\n          <input\n            type=\"number\"\n            placeholder=\"Experience\"\n            formControlName=\"totalExp\"\n          />\n        </div>\n        <div class=\"column\">\n          <input type=\"date\" placeholder=\"Start Date\" formControlName=\"start\" />\n          <input type=\"date\" placeholder=\"End Date\" formControlName=\"end\" />\n        </div>\n        <button\n          type=\"button\"\n          class=\"btn-add-delete\"\n          (click)=\"DeleteExperience(i)\"\n        >\n          Delete Experience\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn-add-delete\" (click)=\"AddExperience()\">\n      Add Experience\n    </button>\n\n    <input type=\"submit\" value=\"Submit\" class=\"submit-btn\" [disabled]=\"!reactiveForm.valid\"/>\n  </form>\n</section>\n\n<!--uncomment below HTML for displaying form data-->\n<section class=\"user-detail-container\" *ngIf=\"reactiveForm.valid\">\n  <div class=\"user-details-container\">\n    <div class=\"user-avatar\">\n      <p>\n        {{ formdata.firstName?.slice(0, 1)\n        }}{{ formdata.lastName?.slice(0, 1) }}\n      </p>\n    </div>\n    <div class=\"user-details\">\n      <div class=\"user-name\">\n        <h2>{{ formdata.firstName }} {{ formdata.lastName }}</h2>\n      </div>\n      <p><b>Email:</b> {{ formdata.email }}</p>\n      <p><b>Username:</b> {{ formdata.username }}</p>\n      <p><b>Date of birth:</b> {{ formdata.dob }}</p>\n      <div class=\"user-name\">\n        <h3>Address</h3>\n      </div>\n      <span>{{ formdata.address?.country }}</span\n      >. <span> {{ formdata.address?.city }}</span\n      >. <span> {{ formdata.address?.region }}</span\n      >.\n      <span> {{ formdata.address?.postal }}</span>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AbstractControl, FormControl } from \"@angular/forms\";\r\n\r\nexport class CustomValidators{\r\n    static noSpaceAllowed(control: FormControl){\r\n        if(control.value != null && control.value.indexOf(' ') != -1){\r\n            return {noSpaceAllowed: true}\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static checkUserName(control: AbstractControl): Promise<any>{\r\n        return userNameAllowed(control.value);\r\n    }\r\n}\r\n\r\nfunction userNameAllowed(username: string){\r\n    const takenUserNames = ['johnsmith', 'manojjha', 'sarahking'];\r\n\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if(takenUserNames.includes(username)){\r\n                resolve({checkUsername: true});\r\n            }\r\n            else{\r\n                resolve(null);\r\n            }\r\n        }, 5000);\r\n    });\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","FormArray","FormControl","FormGroup","Validators","CustomValidators","i0","AppComponent","constructor","ngOnInit","reactiveForm","firstName","required","noSpaceAllowed","lastName","email","username","checkUserName","dob","gender","address","street","country","city","region","postal","skills","experience","statusChanges","subscribe","status","console","log","formStatus","onFormSubmitted","value","formdata","reset","firstname","lastname","addSkills","get","push","deleteSkills","index","controls","removeAt","AddExperience","formGroup","company","position","totalExp","start","end","DeleteExperience","formArray","generateUsername","fName","lName","length","slice","datetime","Date","getFullYear","toLowerCase","patchValue","selectors","decls","vars","consts","template","ctx","BrowserModule","ReactiveFormsModule","CommonModule","AppModule","bootstrap","declarations","control","indexOf","userNameAllowed","takenUserNames","Promise","resolve","reject","setTimeout","includes","checkUsername","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}